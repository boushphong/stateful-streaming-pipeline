version: "2.2"

volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}


services:
  runner:
    build: './'
    container_name: runner
    command:
      - python3
      - /eventProducer.py
      - payment
    depends_on:
      - redpanda

  redpanda:
    image: vectorized/redpanda:v22.1.7
    container_name: redpanda-1
    command: 
      >
      redpanda
      start
      --smp
      '1'
      --reserve-memory
      0M
      --overprovisioned
      --node-id
      '0'
      --kafka-addr
      PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      --advertise-kafka-addr
      PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
      --pandaproxy-addr
      PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      --advertise-pandaproxy-addr
      PLAINTEXT://redpanda:28082,OUTSIDE://localhost:8082 &&
    ports:
    - "18081:8081"
    - "18082:8082"
    - "9092:9092"
    - "28082:28082"
    - "29092:29092"

  metabase:
    container_name: some_metabase
    image: metabase/metabase:v0.44.0
    ports:
      - "3030:3030"

  postgres:
    container_name: postgres
    image: postgres:14.4
    volumes:
      - metadata_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=druid
      - POSTGRES_DB=druid

  # Need 3.5 or later for container nodes
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.5
    ports:
      - "2181:2181"
    environment:
      - ZOO_MY_ID=1

  coordinator:
    image: apache/druid:0.23.0
    container_name: coordinator
    volumes:
      - druid_shared:/opt/shared
      - coordinator_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
    ports:
      - "8081:8081"
    command:
      - coordinator
    env_file:
      - environment

  broker:
    image: apache/druid:0.23.0
    container_name: broker
    volumes:
      - broker_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8082:8082"
    command:
      - broker
    env_file:
      - environment

  historical:
    image: apache/druid:0.23.0
    container_name: historical
    volumes:
      - druid_shared:/opt/shared
      - historical_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8083:8083"
    command:
      - historical
    env_file:
      - environment

  middlemanager:
    image: apache/druid:0.23.0
    container_name: middlemanager
    volumes:
      - druid_shared:/opt/shared
      - middle_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8091:8091"
      - "8100-8105:8100-8105"
    command:
      - middleManager
    env_file:
      - environment

  router:
    image: apache/druid:0.23.0
    container_name: router
    volumes:
      - router_var:/opt/druid/var
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8888:8888"
    command:
      - router
    env_file:
      - environment